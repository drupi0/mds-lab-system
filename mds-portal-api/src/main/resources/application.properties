spring.datasource.url=jdbc:postgresql://localhost:5432/mdsportal
spring.datasource.username=mdsadmin
spring.datasource.password=640f31e16aa566e319cc
spring.jpa.show-sql=true
#spring.datasource.driver-class-name=org.postgresql.Driver 

#hibernate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#hibernate auto ddl create (create,create-drop,validate,update)
spring.jpa.hibernate.ddl-auto=update

encryption.seed = 815bb2f5de9442139af1ee1b055e0851

keycloak.realm = http://mds.intranet/auth/realms/mds-auth
keycloak.allowed_origins = http://localhost:4200
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
# shoud be set to where your authorization-server is
com.c4-soft.springaddons.security.issuers[0].location=${keycloak.realm}

# shoud be configured with a list of private-claims this authorization-server puts user roles into
# below is default Keycloak conf for a `spring-addons` client with client roles mapper enabled
com.c4-soft.springaddons.security.issuers[0].authorities.claims=realm_access.roles,resource_access.spring-addons-public.roles,resource_access.spring-addons-confidential.roles

# use IDE auto-completion or see SpringAddonsSecurityProperties javadoc for complete configuration properties list

com.c4-soft.springaddons.security.cors[0].allowedOrigins = ${keycloak.allowed_origins}